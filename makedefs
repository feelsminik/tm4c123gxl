COMPILER=gcc
CFLAGSgcc=-DTARGET_IS_TM4C123_RB1
PREFIX:=arm-none-eabi
CC=${PREFIX}-gcc
AR=${PREFIX}-ar
OBJCOPY=${PREFIX}-objcopy
LD=${PREFIX}-ld
LM4FLASH = lm4flash

CPU=-mcpu=cortex-m4
FPU=-mfpu=fpv4-sp-d16 -mfloat-abi=hard

LDFLAGS=--gc-sections
AFLAGS=-mthumb \
    ${CPU}  \
       ${FPU}  \
       -MD
CFLAGS=-mthumb             \
       ${CPU}              \
       ${FPU}              \
       -ffunction-sections \
       -fdata-sections     \
       -MD                 \
       -std=c99            \
       -Wall               \
       -pedantic           \
       -DPART_${PART}      \
       -c

LIBGCC:=${shell ${CC} ${CFLAGS} -print-libgcc-file-name}
LIBC:=${shell ${CC} ${CFLAGS} -print-file-name=libc.a}
LIBM:=${shell ${CC} ${CFLAGS} -print-file-name=libm.a}

ifdef DEBUG
CFLAGS+=-g -D DEBUG -O0
else
CFLAGS+=-Os
endif

CFLAGS+=${CFLAGSgcc}
CFLAGS+= -I${IPATH}
AFLAGS+= -I${IPATH}

build/%.o: %.c
	@${CC} ${CFLAGS} -D${COMPILER} -o ${@} ${<}

build/%.o: %.S
	@${CC} ${AFLAGS} -D${COMPILER} -o ${@} -c ${<}

build/%.a:
	@${AR} -cr ${@} ${^}

build/%.axf:
	@if [ 'x${SCATTERgcc_${notdir ${@:.axf=}}}' = x ];					\
	then																 \
		ldname="${ROOT}/gcc/standalone.ld";							  \
	else																 \
		ldname="${SCATTERgcc_${notdir ${@:.axf=}}}";					 \
	fi;																  \
	${LD} -T $${ldname}												   \
		--entry ${ENTRY_${notdir ${@:.axf=}}}						   \
		${LDFLAGSgcc_${notdir ${@:.axf=}}}							  \
		${LDFLAGS} -o ${@} $(filter %.o %.a, ${^})					  \
		'${LIBM}' '${LIBC}' '${LIBGCC}'
	@${OBJCOPY} -O binary ${@} ${@:.axf=.bin}
